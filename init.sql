CREATE TABLE "products" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "category_id" INT,
  "user_id" INT,
  "name" TEXT NOT NULL,
  "description" TEXT NOT NULL,
  "old_price" INT,
  "price" INT NOT NULL,
  "quantity" INT NOT NULL DEFAULT 0,
  "status" INT,
  "created_at" TIMESTAMP DEFAULT NOW(),
  "updated_at" TIMESTAMP DEFAULT NOW()
);

CREATE TABLE "categories" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" TEXT NOT NULL
);

CREATE TABLE "files" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" TEXT,
  "path" TEXT NOT NULL,
  "product_id" INT
);
CREATE TABLE "users" (
  "id" SERIAL PRIMARY KEY,
  "name" TEXT NOT NULL,
  "email" TEXT UNIQUE NOT NULL,
  "password" TEXT NOT NULL,
  "cpf_cnpj" INT UNIQUE NOT NULL,
  "cep" TEXT,
  "address" TEXT,
  "created_at" TIMESTAMP DEFAULT NOW(),
  "updated_at" TIMESTAMP DEFAULT NOW()
)

ALTER TABLE "products" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id")
-- Adicionando chaves estrangeiras

ALTER TABLE "products"
  ADD CONSTRAINT "fk_category" FOREIGN KEY ("category_id") REFERENCES "categories" ("id");

ALTER TABLE "files"
  ADD CONSTRAINT "fk_product" FOREIGN KEY ("product_id") REFERENCES "products" ("id");





CREATE FUNCTION set_timestamp()
RETURNS TRIGGER as $$
BEGIN

NEW.updated_at = NOW();
RETURN NEW;	
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER set_timestamp_trigger
BEFORE UPDATE ON products
FOR EACH ROW
EXECUTE PROCEDURE set_timestamp();